{"version":3,"sources":["compenents/my-component.js","compenents/comp2.js","utils/utils.js","App.js","reportWebVitals.js","index.js"],"names":["MyComponent","className","MyComp","props","userInput","useRef","type","placeholder","ref","id","onClick","user","current","value","console","log","setUsername","getId","len","chars","val","i","Math","floor","random","length","db","Dexie","version","stores","todos","App","d","Date","setSeconds","setMinutes","useState","setTodos","username","dueDate","setDueDate","shiftedIsOn","setShiftedIsOn","expandIsOn","setExpandIsOn","titleInput","creatorInput","assigneeInput","descriptionInput","loadData","toCollection","sortBy","then","storedTodos","a","put","title","date","now","finished","creator","assignee","description","delete","useEffect","name","classNames","shifted","expand","selected","onChange","map","todo","join","toLocaleString","update","deleteTodo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a885d918.chunk.js","sourcesContent":["import React from 'react';\nfunction MyComponent() {\n    return (\n        <h3 className=\"currenttasks\">Your todos:</h3>\n    )\n};\nexport default MyComponent;","import React, { useRef } from 'react';\nfunction MyComp(props) {\n    const userInput = useRef(null);\n    function createUser() {\n        let user = userInput.current.value;\n        console.log(user);\n        props.setUsername(user);\n    }\n    return (\n        <div className=\"usecontainer\">\n            <input type=\"text\" placeholder={\"user\"} ref={userInput}></input>\n            <button id=\"add\" onClick={createUser} > submit name</button>\n        </div>\n    )\n};\nexport default MyComp;","export function getId(len) {\n  const chars = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n  let val = \"\";\n  for (let i = 0; i < len; ++i) {\n      val += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return val;\n}","import React, { useState, useEffect, useRef } from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\nimport MyComponent from './compenents/my-component';\nimport MyComp from './compenents/comp2';\nimport Dexie from 'dexie';\nimport { getId } from './utils/utils';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport classNames from 'classnames';\n\nconst db = new Dexie('todos');\ndb.version(1).stores({\n  todos: 'id,title,date,creator,assignee,description,dueDate'\n});\nfunction App() {\n  let d = new Date();\n  d.setSeconds(null);\n  d.setMinutes(null);\n  const [todos, setTodos] = useState([]);\n  const [username, setUsername] = useState(\"user\");\n  const [dueDate, setDueDate] = useState(d);\n  const [shiftedIsOn, setShiftedIsOn] = useState(false);\n  const [expandIsOn, setExpandIsOn] = useState(false);\n  const titleInput = useRef(null);\n  const creatorInput = useRef(null);\n  const assigneeInput = useRef(null);\n  const descriptionInput = useRef(null);\n  const dueDateInput = useRef(null);\n  const userInput = useRef(null);\n  const user = useRef(null);\n\n  function handleChange(date) {\n    setDueDate(date);\n  }\n\n  function toggleShifted() {\n    setShiftedIsOn(!shiftedIsOn);\n    setExpandIsOn(!expandIsOn);\n  }\n\n  function loadData() {\n    db.todos.toCollection().sortBy('finished').then(storedTodos => {\n      setTodos(storedTodos);\n    });\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function putItemIntoDatabase() {\n    const id = getId(20);\n    await db.todos.put({\n      id: id,\n      title: titleInput.current.value,\n      date: Date.now(),\n      finished: false,\n      creator: creatorInput.current.value,\n      assignee: assigneeInput.current.value,\n      description: descriptionInput.current.value,\n      dueDate: dueDate\n    });\n    loadData();\n    titleInput.current.value = \"\";\n    descriptionInput.current.value = \"\";\n    creatorInput.current.value = \"\";\n    assigneeInput.current.value = \"\";\n  }\n\n  async function deleteTodo(id) {\n    await db.todos.delete(id);\n    loadData();\n  }\n\n  function _setUsername(name) {\n    setUsername(name);\n  }\n\n  function setFinished(id) {\n    console.log(\"should finish\", id)\n    db.todos.update(id, { finished: true });\n    loadData();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 id=\"hello\">Hello, {username}!</h1>\n      <MyComp setUsername={_setUsername} />\n      <div className=\"grid\" onClick={toggleShifted}>\n        <div className=\"linecontainer\">\n          <div className=\"line\"></div>\n          <div className={classNames(\"line2\", { shifted: shiftedIsOn })}></div>\n        </div>\n        <h2 className=\"createnew\">Create New Task</h2>\n      </div>\n      <div className={classNames(\"taskcreate\", { expand: expandIsOn })}>\n        <label>Todo Title: </label><input type=\"text\" placeholder={\"Todo Title\"} ref={titleInput} />\n        <br />\n        <label>Creator's Name: </label><input type=\"text\" placeholder={\"Todo Creator\"} ref={creatorInput} />\n        <br />\n        <label>Task Description: </label><textarea type=\"text\" placeholder={\"Todo Description\"} ref={descriptionInput} >\n          Place description here.\n        </textarea>\n        <br />\n        <label>Assign your task: </label><select id=\"optionList\" ref={assigneeInput} >\n          <option value=\"Mom\">Mom</option>\n          <option value=\"Dad\">Dad</option>\n          <option value=\"Child\">Child</option>\n          <option value={username}>{username}</option>\n        </select >\n        <br />\n        <label>Due Date: </label>\n        <DatePicker\n          selected={dueDate}\n          onChange={handleChange}\n        />\n        <div id=\"demo\"></div>\n        <button onClick={putItemIntoDatabase}>Create Todo</button>\n      </div>\n      <MyComponent />\n      {todos.map(todo => (\n        <div key={todo.id} className={[\"todoContainer\", todo.finished ? 'finished' : null].join(\" \")}>\n          {todo.finished ? (\n            <div className=\"strike todoTitle\">{todo.title}</div>) : <div className=\"todoTitle\">{todo.title}</div>}\n          <b><span>Assigned to: {todo.assignee}</span><br /></b>\n          <span>Creator: {todo.creator}</span><br />\n          <span>Description: {todo.description}</span><br />\n          <span>Created Date: {new Date(todo.date).toLocaleString()}</span>\n          <br />\n          <span>Due: {todo.dueDate.toLocaleString()}</span>\n          <br />\n          <span>Finished: {todo.finished ? 'yes' : 'no'}</span>\n          <br />\n          <button onClick={() => setFinished(todo.id)} >Done!</button> <button onClick={() => deleteTodo(todo.id)} >DELETE</button><br />\n          <div className=\"lineborder\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}